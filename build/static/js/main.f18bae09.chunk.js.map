{"version":3,"sources":["stores/header.ts","stores/todos.ts","stores/filter.ts","App.tsx","index.tsx"],"names":["createStore","text","value","Header","header","stores","useData","todos","handleChange","useAction","target","handleKeyUp","key","todo","id","Math","random","content","completed","push","alert","className","placeholder","onChange","onKeyUp","autoFocus","TodoList","filter","list","map","TodoItem","edit","useReactive","enable","handleEnableEditing","handleDisableEditing","handleEditing","handleSubmit","handleRemove","event","handleToggle","remove","cx","editing","type","checked","onClick","onDoubleClick","onBlur","Toggler","isAllCompleted","every","handleToggleAll","forEach","length","Footer","activeTodos","completedTodos","handleFilterChange","selectedFilter","handleClearCompleted","aLen","cLen","selected","FilterItem","children","preventDefault","Info","href","App","Object","values","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f18bae09.chunk.js","sourcesContent":["import { createStore } from \"create-react-store\";\r\n\r\nexport default createStore({\r\n  text: \"\"\r\n});\r\n","import { createStore } from \"create-react-store\";\r\n\r\nexport type Todo = {\r\n  id: number;\r\n  content: string;\r\n  completed: boolean;\r\n};\r\n\r\nexport type Todos = Todo[];\r\n\r\nexport default createStore<Todos>([]);\r\n","import { createStore } from \"create-react-store\";\r\n\r\nexport type Filter = \"all\" | \"active\" | \"completed\";\r\n\r\nexport default createStore<{ value: Filter }>({\r\n  value: \"all\"\r\n});\r\n","import React, { FC } from \"react\";\nimport {\n  useAction,\n  Provider,\n  remove,\n  useReactive,\n  enableTracing\n} from \"create-react-store\";\nimport cx from \"classnames\";\nimport * as stores from \"./stores\";\nimport { Todo } from \"./stores/todos\";\nimport { Filter } from \"./stores/filter\";\n\nif (process.env.NODE_ENV === \"development\") {\n  enableTracing();\n}\n\nconst App: React.FC = () => {\n  return (\n    <Provider stores={Object.values(stores)}>\n      <section className=\"todoapp\">\n        <Header />\n        <section className=\"main\">\n          <Toggler />\n          <TodoList />\n        </section>\n        <Footer />\n      </section>\n      <Info />\n    </Provider>\n  );\n};\n\nconst Header: React.FC = () => {\n  let header = stores.header.useData();\n  let todos = stores.todos.useData();\n\n  let handleChange = useAction(({ target }) => {\n    header.text = target.value;\n  });\n\n  let handleKeyUp = useAction(({ key }: React.KeyboardEvent) => {\n    if (key !== \"Enter\") return;\n\n    if (header.text === \"\") {\n      alert(\"todo content is empty\");\n      return;\n    }\n\n    let todo: Todo = {\n      id: Math.random(),\n      content: header.text,\n      completed: false\n    };\n\n    todos.push(todo);\n    header.text = \"\";\n  });\n\n  return (\n    <header className=\"header\">\n      <h1>todos</h1>\n      <input\n        className=\"new-todo\"\n        placeholder=\"What needs to be done?\"\n        value={header.text}\n        onChange={handleChange}\n        onKeyUp={handleKeyUp}\n        autoFocus\n      />\n    </header>\n  );\n};\n\nconst TodoList: React.FC = () => {\n  let todos = stores.todos.useData();\n  let filter = stores.filter.useData();\n\n  let list = todos.filter(todo => {\n    if (filter.value === \"all\") {\n      return true;\n    }\n\n    if (filter.value === \"active\") {\n      return !todo.completed;\n    }\n\n    if (filter.value === \"completed\") {\n      return todo.completed;\n    }\n\n    return false;\n  });\n\n  return (\n    <ul className=\"todo-list\">\n      {list.map(todo => {\n        return <TodoItem key={todo.id} todo={todo} />;\n      })}\n    </ul>\n  );\n};\n\nconst TodoItem: FC<{ todo: Todo }> = ({ todo }) => {\n  let edit = useReactive({\n    enable: false,\n    content: \"\"\n  });\n\n  let handleEnableEditing = useAction(() => {\n    edit.enable = true;\n    edit.content = todo.content;\n  });\n\n  let handleDisableEditing = useAction(() => {\n    edit.enable = false;\n    edit.content = \"\";\n  });\n\n  let handleEditing = useAction(({ target }) => {\n    edit.content = target.value;\n  });\n\n  let handleSubmit = useAction(() => {\n    if (edit.content === \"\") {\n      handleRemove();\n      return;\n    }\n    todo.content = edit.content;\n    handleDisableEditing();\n  });\n\n  let handleKeyUp: React.KeyboardEventHandler = useAction(event => {\n    if (event.key === \"Enter\") {\n      handleSubmit();\n    }\n    if (event.key === \"Escape\") {\n      handleDisableEditing();\n    }\n  });\n\n  let handleToggle = useAction(() => {\n    todo.completed = !todo.completed;\n  });\n\n  let handleRemove = useAction(() => {\n    remove(todo);\n  });\n\n  return (\n    <li className={cx({ completed: todo.completed, editing: edit.enable })}>\n      <div className=\"view\">\n        <input\n          className=\"toggle\"\n          type=\"checkbox\"\n          checked={todo.completed}\n          onClick={handleToggle}\n          onChange={() => {}}\n        />\n        <label onDoubleClick={handleEnableEditing}>{todo.content}</label>\n        <button className=\"destroy\" onClick={handleRemove}></button>\n      </div>\n      {edit.enable && (\n        <input\n          className=\"edit\"\n          value={edit.content}\n          onChange={handleEditing}\n          onBlur={handleSubmit}\n          onKeyUp={handleKeyUp}\n          autoFocus\n        />\n      )}\n    </li>\n  );\n};\n\nconst Toggler: React.FC = () => {\n  let todos = stores.todos.useData();\n\n  let isAllCompleted = todos.every(todo => todo.completed);\n\n  let handleToggleAll = useAction(() => {\n    todos.forEach(todo => {\n      todo.completed = !isAllCompleted;\n    });\n  });\n\n  if (todos.length === 0) {\n    return null;\n  }\n\n  return (\n    <>\n      <input\n        className=\"toggle-all\"\n        checked={isAllCompleted}\n        type=\"checkbox\"\n        onChange={() => {}}\n      />\n      <label onClick={handleToggleAll}>Mark all as complete</label>\n    </>\n  );\n};\n\nconst Footer: React.FC = () => {\n  let filter = stores.filter.useData();\n  let todos = stores.todos.useData();\n\n  let activeTodos = todos.filter(todo => !todo.completed);\n  let completedTodos = todos.filter(todo => todo.completed);\n\n  let handleFilterChange = useAction((selectedFilter: Filter) => {\n    filter.value = selectedFilter;\n  });\n\n  let handleClearCompleted = useAction(() => {\n    todos.length = 0;\n    todos.push(...activeTodos);\n  });\n\n  if (todos.length === 0) {\n    return null;\n  }\n\n  let aLen = activeTodos.length;\n  let cLen = completedTodos.length;\n\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        <strong>{aLen}</strong> {aLen === 1 ? \"item\" : \"items\"} left\n      </span>\n      <ul className=\"filters\">\n        <FilterItem\n          selected={filter.value === \"all\"}\n          onClick={() => handleFilterChange(\"all\")}\n        >\n          All\n        </FilterItem>\n        <FilterItem\n          selected={filter.value === \"active\"}\n          onClick={() => handleFilterChange(\"active\")}\n        >\n          Active\n        </FilterItem>\n        <FilterItem\n          selected={filter.value === \"completed\"}\n          onClick={() => handleFilterChange(\"completed\")}\n        >\n          Completed\n        </FilterItem>\n      </ul>\n      {cLen > 0 && (\n        <button className=\"clear-completed\" onClick={handleClearCompleted}>\n          Clear completed\n        </button>\n      )}\n    </footer>\n  );\n};\n\ninterface FilterItemProps {\n  onClick: React.MouseEventHandler;\n  selected: boolean;\n}\n\nconst FilterItem: FC<FilterItemProps> = ({ children, onClick, selected }) => {\n  let handleClick = (event: React.MouseEvent) => {\n    event.preventDefault();\n    if (onClick) onClick(event);\n  };\n  return (\n    <li>\n      <a className={selected ? \"selected\" : \"\"} onClick={handleClick}>\n        {children}\n      </a>\n    </li>\n  );\n};\n\nconst Info: FC = () => {\n  return (\n    <footer className=\"info\">\n      <p>Double-click to edit a todo</p>\n      <p>\n        Github{\" \"}\n        <a href=\"https://github.com/Lucifier129/create-react-store-todo-app\">\n          create-react-store-todo-app\n        </a>\n      </p>\n      <p>\n        Powerd by{\" \"}\n        <a href=\"https://github.com/Lucifier129/create-react-store\">\n          create-react-store\n        </a>\n      </p>\n    </footer>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}